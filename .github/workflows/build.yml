name: Validate and Render Resume

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

  # Allow this workflow to be called from the release workflow
  workflow_call:

jobs:
  validate:
    name: Validate Resume
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Validate Resume
        run: python src/validate_resume.py resume.json schemas/resume.schema.json

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: python -m unittest discover test

  markdown:
    name: Render to Markdown
    needs: [validate, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Render to Markdown
        run: python src/create_resume.py templates/resume.md.j2 resume.json -o out/resume.md

      - name: Upload Markdown
        uses: actions/upload-artifact@v4
        with:
          name: resume-md
          path: out/resume.md
          if-no-files-found: error

  latex:
    name: Render to LaTeX
    needs: [validate, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - name: Render to LaTeX
        run: python src/create_resume.py templates/resume.tex.j2 resume.json -o out/resume.tex

      - name: Get packages
        run: |
          grep -hoE '\\usepackage(\[[^]]*\])?\{[^}]+\}' out/*.tex out/*.cls \
          | sed -E 's/.*\{([^}]+)\}/\1/' \
          | sort -u > requirements-from-latex-files.txt

      - uses: teatimeguest/setup-texlive-action@v3
        with:
          package-file: |
            requirements-texlive-base.txt
            requirements-from-latex-files.txt

      - name: Download getnonfreefontscript
        run: wget http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts

      - name: Install getnonfreefontscript
        run: texlua install-getnonfreefonts

      - name: Install fonts
        run: getnonfreefonts --sys garamondx

      - name: Create PDF
        run: latexmk -synctex=1 -interaction=nonstopmode -file-line-error -xelatex -cd out/resume.tex

      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: out/resume.pdf
          if-no-files-found: error
